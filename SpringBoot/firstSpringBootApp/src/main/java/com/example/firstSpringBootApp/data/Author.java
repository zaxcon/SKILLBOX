package com.example.firstSpringBootApp.data;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

@Entity
@Table(name = "authors")
@ApiModel(description = "data model of author entity")
public class Author {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @ApiModelProperty(value = "author id generated by db",position = 1)
    private int id;
    @ApiModelProperty(value = "photo of author", position = 3)
    private String photo;
    @ApiModelProperty("mnemonical identity sequence of characters")
    private String slug;
    @ApiModelProperty(value = "full name of author",example = "Bob Marley", position = 2)
    private String name;
    @Column(columnDefinition = "TEXT")
    @ApiModelProperty("author description text")
    private String description;

    @ManyToMany(cascade = { CascadeType.ALL })
    @JoinTable(
            name = "book2author",
            joinColumns = { @JoinColumn(name = "author_id") },
            inverseJoinColumns = { @JoinColumn(name = "book_id") }
    )
    private Set<Book> booksAuthor = new HashSet<Book>();

    public Set<Book> getBooksAuthor() {
        return booksAuthor;
    }

    @Override
    public String toString() {
        return name;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getPhoto() {
        return photo;
    }

    public void setPhoto(String photo) {
        this.photo = photo;
    }

    public String getSlug() {
        return slug;
    }

    public void setSlug(String slug) {
        this.slug = slug;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getPreview()
    {
        return getDescription().substring(0,Math.min(getDescription().length(),200));
    }
    public String getHide()
    {
        return getDescription().length()>200?getDescription().substring(201):"";
    }
}

